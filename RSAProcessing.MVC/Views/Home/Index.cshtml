@{
    ViewData["Title"] = "Home Page";
}
<div class="container">
    <div class="row clearfix">
        <div class="col-md-12 column">
            <blockquote>
                <p id="PublicData">
                    Public Key :   Wait for  "生成公钥&私钥"
                </p>
            </blockquote>
            <blockquote>
                <p id="PrivateData">
                    Private Key :   Wait for  "生成公钥&私钥"
                </p>
            </blockquote>
            <div class="row clearfix">
                <div class="col-md-4 column">
                    <button type="button" class="btn btn-default btn-success btn-block" id="generateBtn" onclick="generateKeyPair()">生成公钥&私钥</button>
                </div>
                <div class="col-md-4 column">
                    <button type="button" class="btn btn-default btn-block btn-info" id="enQueueEncrypt" onclick="encrypt()">加入加密队列</button>
                </div>
                <div class="col-md-4 column">
                    <button type="button" class="btn btn-default btn-primary btn-block" id="enQueueDecrypt" onclick="decrypt()">加入解密队列</button>
                </div>
            </div>
            <table id="userDataTable" class="table table-striped">
                <thead>
                    <tr>
                        <th>UserID</th>
                        <th>UserIndex</th>
                        <th>Name</th>
                        <th>Password</th>
                        <th>Encrypted Password</th>
                        <th>Decrypted Password</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>123456</td>
                        <td>UA000001</td>
                        <td>John Doe</td>
                        <td>********</td>
                        <td>2b5e7c9a3f</td>
                        <td>password123</td>
                    </tr>
                    <!-- Add more rows for additional users -->
                </tbody>
            </table>
        </div>
    </div>
</div>
@*<div class="container">
    <div class="row p-1">
        <div class="col-1">User</div>
        <div class="col-5"><input type="text" id="userInput" /></div>
    </div>
    <div class="row p-1">
        <div class="col-1">Message</div>
        <div class="col-5"><input type="text" class="w-100" id="messageInput" /></div>
    </div>
    <div class="row p-1">
        <div class="col-6 text-end">
            <input type="button" id="sendButton" value="Send Message" />
        </div>
    </div>
    <div class="row p-1">
        <div class="col-6">
            <hr />
        </div>
    </div>
    <div class="row p-1">
        <div class="col-6">
            <ul id="messagesList"></ul>
        </div>
    </div>
</div>*@
<script src="~/js/signalr/dist/browser/signalr.js"></script>
@*<script src="~/js/chat.js"></script>*@
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    let rsaHost = 'http://localhost:5102';
    $(function () {
        $.ajax({
            url: rsaHost + "/api/user/userlist",
            method: "Get",
            success: function (response) {
                // 在成功回调函数中处理数据
                var tableData = response;

                // 遍历数据并动态创建<tr>元素，并将数据填充到<td>中
                var tbody = $('#userDataTable tbody');

                console.log(response);
                $.each(tableData, function (index, row) {
                    var newRow = $('<tr>');
                    newRow.append($('<td>').text(row.userId));
                    newRow.append($('<td>').text(row.index));
                    newRow.append($('<td>').text(row.userName));
                    newRow.append($('<td>').text(row.pwd));
                    newRow.append($('<td>').attr('id', 'en_' + row.userId).text(row.encryptedPwd));
                    newRow.append($('<td>').attr('id', 'de_' + row.userId).text(row.decryptedPwd));
                    tbody.append(newRow);
                });
            },
            error: function () {
                alert("Error generating key pair");
            }
        });
    })

    function generateKeyPair() {
        // Make an API call to generate key pair
        $.ajax({
            url: rsaHost + "/api/user/keypair",
            method: "POST",
            success: function (response) {
                // Display generated key pair
                $("#PublicData").text(response.publicKey);
                $("#PrivateData").text(response.privateKey);
            },
            error: function () {
                alert("Error generating key pair");
            }
        });
    }

    function encrypt() {
        // Make an API call to generate key pair
        $.ajax({
            url: rsaHost + "/api/user/queue/encryption",
            method: "POST",
            success: function (response) {
                alert("encrypt Enqueue Success");
            },
            error: function () {
                alert("encrypt Enqueue Fail");
            }
        });
    }

    function decrypt() {
        // Make an API call to generate key pair
        $.ajax({
            url: rsaHost + "/api/user/queue/decryption",
            method: "POST",
            success: function (response) {
                alert("decrypt Enqueue Success");
            },
            error: function () {
                alert("decrypt Enqueue Fail");
            }
        });
    }
</script>


<script>
    let queueHost = 'http://localhost:5102';
    var connection = new signalR.HubConnectionBuilder().withUrl(queueHost + "/queueHub").build();

    connection.on("ReceiveEncrypt", function (userId, message) {
        console.log(userId);
        console.log(message);
        // 使用特定 id 来定位并修改文本内容
        $('#en_' + userId).text(message);
    });

    connection.on("ReceiveDecrypt", function (userId, message) {
        console.log(userId);
        console.log(message);
        // 使用特定 id 来定位并修改文本内容
        $('#de_' + userId).text(message);
    });

    connection.start().then(function () {
        console.log("Connection Success")
    }).catch(function (err) {
        return console.error(err.toString());
    });

</script>
